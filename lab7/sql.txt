CREATE DATABASE college

CREATE TABLE student (
	student_id INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR(10) NOT NULL,
	year SMALLINT DEFAULT 1,
	dept_no INTEGER NOT NULL,
	major VARCHAR(20)
)

CREATE TABLE department(
	dept_no INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY ,
	dept_name VARCHAR(20) NOT NULL UNIQUE,
	office VARCHAR(20) NOT NULL,
	office_tel VARCHAR(13)
)

DESCRIBE student

ALTER TABLE student
	CHANGE COLUMN major major VARCHAR(30),
	ADD COLUMN gender VARCHAR(1)

DESCRIBE student

INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20070002, 'Jane Smith', 3, 4, 'Business Administration'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20060001, 'Ashley Jackson', 4, 4, 'Business Administration');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20030001, 'Liam Johnson', 4, 2, 'Electrical Engineering'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20040003, 'Jacob Lee', 3, 2, 'Electrical Engineering');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20060002, 'Noah Kim', 3, 1, 'Computer Science'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20100002, 'Ava Lim', 3, 4, 'Business Administration');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20110001, 'Emma Watson', 2, 1, 'Computer Science'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20080003, 'Lisa Maria', 4, 3, 'Law');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20040002, 'Jacob William', 4, 5, 'Law'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20070001, 'Emily Rose', 4, 4, 'Business Administration');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20100001, 'Ethan Hunt', 3, 4, 'Business Administration'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20110002, 'Jason Mraz' 2, 1, 'Electrical Engineering');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20030002, 'John Smith', 5, 1, 'Computer Science') ,
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20070003, 'Sophia Park', 4, 3, 'Law');
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20070007, 'James Michael', 2, 4, 'Business Administration'); 
INSERT INTO student(student_id,name,year,dept_no,major)
VALUES(20100003, 'James Bond', 3, 1, 'Computer Science');


INSERT INTO department(dept_name,office,office_tel)
VALUES ('Computer Science', 'Science Building 101', '02-3290-0123');
INSERT INTO department(dept_name,office,office_tel)
VALUES('Electrical Engineering', 'Engineering Building 401', '02-3290-2345');
INSERT INTO department(dept_name,office,office_tel)
VALUES('Law', 'Law Building 201', '02-3290-7896');;
INSERT INTO department(dept_name,office,office_tel)
VALUES('Business Administration', 'Business Building 104', '02-3290-1112');
INSERT INTO department(dept_name,office,office_tel)
VALUES('English Language and Literature', 'Language Building 303', '02-3290-4412');

UPDATE department
SET dept_name = 'Electrical and Electronics Engineering'
WHERE dept_name = 'Electrical Engineering';

INSERT INTO department(dept_name,office,office_tel)
VALUES('Special Education','Education Building 403', '02-3290-2347');

UPDATE student
SET dept_no = 6
WHERE name = 'Emma Watson';

DELETE FROM student
WHERE name = 'Jason Mraz';

DELETE FROM student
WHERE name = 'John Smith';


SELECT * FROM student
WHERE dept_no = (
SELECT dept_no FROM department WHERE dept_name = 'Computer Science');

SELECT student_id, year, major
FROM student;

SELECT * FROM student
WHERE year =3;

SELECT * FROM student
WHERE year =1 or year=2;

SELECT * FROM student
WHERE dept_no = (
SELECT dept_no FROM department WHERE dept_name = 'Business Administration'
);


SELECT * FROM student 
WHERE student_id Like '%2007%';

SELECT * FROM student
ORDER BY student_id;

SELECT * FROM student
GROUP BY major;

SELECT major FROM student
GROUP BY major 
HAVING avg(year) >= 3;

SELECT * FROM student
WHERE dept_no = (SELECT dept_np FROM department WHERE dept_name = 'Business Administration') AND student_id Like '%2007%'
LIMIT 2; 



SELECT * FROM roles
WHERE movie_id = (
SELECT id FROM movies WHERE name ='pi');

SELECT first_name, last_name FROM actors
WHERE  id IN (SELECT actor_id FROM roles
WHERE movie_id = (
SELECT id FROM movies WHERE name = 'pi')
);

SELECT first_name, last_name 
FROM actors a
JOIN roles r1 ON a.id = r1.actor_id
JOIN movies m1 on m1.id = r1.movie_id
JOIN roles r2 ON a.id = r2.actor_id
JOIN movies m2 on m2.id = r2.movie_id
WHERE m1.name = 'Kill Bill: Vol. 1' AND m2.name ='Kill Bill: Vol. 2';

SELECT actor_id,first_name,last_name,count(actor_id) FROM actors a
JOIN roles r ON a.id = r.actor_id
JOIN movies m ON m.id = r.movie_id
GROUP BY actor_id 
ORDER BY count(actor_id) DESC
LIMIT 7;

SELECT genre, count(movie_id) FROM movies_genres
JOIN movies ON movies.id = movies_genres.movie_id
GROUP BY genre
ORDER BY count(movie_id) DESC
LIMIT 5;

SELECT first_name, last_name, count(movie_id) FROM directors d
JOIN movies_directors md ON d.id = md.director_id
JOIN movies m ON md.movie_id = m.id
WHERE movie_id In (SELECT movie_id FROM movies_genres WHERE genre = 'Thriller')
Group BY director_id
ORDER By count(movie_id) DESC
LIMIT 1;

SELECT grade FROM grades 
JOIN courses ON grades.course_id = courses.id
WHERE name = 'Computer Science 143';

SELECT students.name,  grade FROM students
JOIN grades ON students.id = grades.student_id
JOIN courses ON grades.course_id = courses.id
WHERE courses.name = 'Computer Science 143' AND (grade="B-" OR grade ="B" OR grade = "B+" OR grade="A=" OR grade="A" OR grade = "A+")

SELECT students.name, courses.name, grade FROM students
JOIN grades ON students.id = grades.student_id
JOIN courses ON grades.course_id = courses.id
WHERE grade="B-" OR grade ="B" OR grade = "B+" OR grade="A=" OR grade="A" OR grade = "A+";

SELECT courses.name FROM students
JOIN grades ON students.id = grades.student_id
JOIN courses ON grades.course_id = courses.id
Group By courses.name Having count(students.id) >=2